/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if(!l1) return l2;
        if(!l2) return l1;
        int carry=0;
        ListNode*prev;
        ListNode*head=l1;
        while(l1 && l2){
            l1->val=l1->val+l2->val+carry;
            carry= l1->val/10;
            l1->val=l1->val%10;
            
            prev=l1;
            l1=l1->next;
            l2=l2->next;
        }
        while(l2){
            l2->val=l2->val+carry;
            carry=l2->val/10;
            l2->val=l2->val%10;
            
            prev->next=l2;
            prev=prev->next;
            l2=l2->next;
        }
        
        while(l1){
            l1->val+=carry;
            carry= l1->val/10;
            l1->val=l1->val%10;
            
            prev=l1;
            l1=l1->next;
        }
        
        while(carry){
            prev->next=new ListNode(carry);
            prev=prev->next;
            carry= prev->val/10;
            prev->val=prev->val%10;
        }
        
        return head;
        
        
        
    }
};
